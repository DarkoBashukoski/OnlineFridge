// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineFridge.Data;

#nullable disable

namespace OnlineFridge.Migrations
{
    [DbContext(typeof(FridgeContext))]
    [Migration("20211120181610_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("OnlineFridge.Models.Ingredient", b =>
                {
                    b.Property<int>("IngredientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IngredientID"), 1L, 1);

                    b.Property<string>("ingredientName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IngredientID");

                    b.ToTable("Ingredient", (string)null);
                });

            modelBuilder.Entity("OnlineFridge.Models.Quantity", b =>
                {
                    b.Property<int>("QuantityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuantityID"), 1L, 1);

                    b.Property<int>("IngredientID")
                        .HasColumnType("int");

                    b.Property<int>("RecipeID")
                        .HasColumnType("int");

                    b.Property<float>("quantity")
                        .HasColumnType("real");

                    b.HasKey("QuantityID");

                    b.HasIndex("IngredientID");

                    b.HasIndex("RecipeID");

                    b.ToTable("Quantity", (string)null);
                });

            modelBuilder.Entity("OnlineFridge.Models.Recipe", b =>
                {
                    b.Property<int>("RecipeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecipeID"), 1L, 1);

                    b.Property<int>("cookTime")
                        .HasColumnType("int");

                    b.Property<int>("foodCategory")
                        .HasColumnType("int");

                    b.Property<int>("prepTime")
                        .HasColumnType("int");

                    b.Property<string>("recipeDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("recipeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecipeID");

                    b.ToTable("Recipe", (string)null);
                });

            modelBuilder.Entity("OnlineFridge.Models.Step", b =>
                {
                    b.Property<int>("StepID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StepID"), 1L, 1);

                    b.Property<int>("RecipeID")
                        .HasColumnType("int");

                    b.Property<string>("stepDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("stepNumber")
                        .HasColumnType("int");

                    b.HasKey("StepID");

                    b.HasIndex("RecipeID");

                    b.ToTable("Step", (string)null);
                });

            modelBuilder.Entity("OnlineFridge.Models.Quantity", b =>
                {
                    b.HasOne("OnlineFridge.Models.Ingredient", "ingredient")
                        .WithMany("quantities")
                        .HasForeignKey("IngredientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineFridge.Models.Recipe", "recipe")
                        .WithMany("quantities")
                        .HasForeignKey("RecipeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ingredient");

                    b.Navigation("recipe");
                });

            modelBuilder.Entity("OnlineFridge.Models.Step", b =>
                {
                    b.HasOne("OnlineFridge.Models.Recipe", "recipe")
                        .WithMany("steps")
                        .HasForeignKey("RecipeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("recipe");
                });

            modelBuilder.Entity("OnlineFridge.Models.Ingredient", b =>
                {
                    b.Navigation("quantities");
                });

            modelBuilder.Entity("OnlineFridge.Models.Recipe", b =>
                {
                    b.Navigation("quantities");

                    b.Navigation("steps");
                });
#pragma warning restore 612, 618
        }
    }
}
